import streamlit as st
import pandas as pd
import plotly.express as px

@st.cache_data
def load_data():
    url_ei_ed = "https://raw.githubusercontent.com/<username>/<repo>/main/ei_ed_data.csv"
    url_esr_ei = "https://raw.githubusercontent.com/<username>/<repo>/main/esr_ei_data.csv"

    df_ei_ed = pd.read_csv(url_ei_ed, encoding='utf-8')
    df_esr_ei = pd.read_csv(url_esr_ei, encoding='utf-8')
    return df_ei_ed, df_esr_ei

# –ó–∞–≥–ª–∞–≤–∏–µ –∏ –ª–µ–≥–µ–Ω–¥–∞
st.title("–û—Ä–∞–∑–º–µ—Ä—è–≤–∞–Ω–µ –Ω–∞ –æ–ø—ä–Ω –≤ –º–µ–∂–¥–∏–Ω–µ–Ω –ø–ª–∞—Å—Ç")
st.markdown("""
üìå **–õ–µ–≥–µ–Ω–¥–∞ –∑–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏—Ç–µ:**  
- h: –¥–µ–±–µ–ª–∏–Ω–∞ –Ω–∞ –ø–ª–∞—Å—Ç–∞ [cm]  
- E: –º–æ–¥—É–ª –Ω–∞ –µ–ª–∞—Å—Ç–∏—á–Ω–æ—Å—Ç –Ω–∞ –ø–ª–∞—Å—Ç–∞ [MPa]  
- D: –¥–∏–∞–º–µ—Ç—ä—Ä –Ω–∞ –∫–æ–ª–µ–ª–æ—Ç–æ [cm]  
- Ed: –º–æ–¥—É–ª –Ω–∞ –µ–ª–∞—Å—Ç–∏—á–Ω–æ—Å—Ç –Ω–∞ –ø–æ–¥–æ—Å–Ω–æ–≤–∞—Ç–∞ [MPa]  
- Ei: –º–æ–¥—É–ª –Ω–∞ –µ–ª–∞—Å—Ç–∏—á–Ω–æ—Å—Ç –Ω–∞ –º–µ–∂–¥–∏–Ω–Ω–∏—è –ø–ª–∞—Å—Ç [MPa]
""")

df_ei_ed, df_esr_ei = load_data()

# –í—ä–≤–µ–∂–¥–∞–Ω–µ –Ω–∞ –±—Ä–æ–π –ø–ª–∞—Å—Ç–æ–≤–µ
n = st.number_input("–í—ä–≤–µ–¥–µ—Ç–µ –±—Ä–æ–π –ø–ª–∞—Å—Ç–æ–≤–µ (–º–∏–Ω–∏–º—É–º 2)", min_value=2, step=1)

h_list = []
E_list = []

for i in range(1, n + 1):
    col1, col2 = st.columns(2)
    with col1:
        h = st.number_input(f"h{i} [cm]", min_value=0.0, step=0.1, format="%f")
    with col2:
        E = st.number_input(f"E{i} [MPa]", min_value=0.0, step=1.0, format="%f")
    h_list.append(h)
    E_list.append(E)

if all(v > 0 for v in h_list) and all(v > 0 for v in E_list):
    H = sum(h_list)
    Esr = sum([E_list[i] * h_list[i] for i in range(n - 1)]) / sum(h_list[:-1])

    st.write(f"**–û–±—â–∞ –¥–µ–±–µ–ª–∏–Ω–∞ H = {H:.2f} cm**")
    st.write(f"**–ò–∑—á–∏—Å–ª–µ–Ω Esr = {Esr:.2f} MPa**")

    Ei = st.number_input("–í—ä–≤–µ–¥–µ—Ç–µ Ei –Ω–∞ –º–µ–∂–¥–∏–Ω–Ω–∏—è –ø–ª–∞—Å—Ç [MPa]", min_value=0.0, step=1.0, format="%f")
    Ed = st.number_input("–í—ä–≤–µ–¥–µ—Ç–µ Ed –Ω–∞ –ø–æ–¥–æ—Å–Ω–æ–≤–∞—Ç–∞ [MPa]", min_value=0.0, step=1.0, format="%f")
    D = st.number_input("–í—ä–≤–µ–¥–µ—Ç–µ D –Ω–∞ –∫–æ–ª–µ–ª–æ—Ç–æ [cm]", min_value=0.0, step=0.1, format="%f")

    if Ei > 0 and Ed > 0 and D > 0:
        HD = H / D
        EiEd = Ei / Ed
        EsrEi = Esr / Ei

        st.write(f"H/D = {HD:.3f}")
        st.write(f"Ei/Ed = {EiEd:.3f}")
        st.write(f"Esr/Ei = {EsrEi:.3f}")

        # –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞ —Ç–æ—á–∫–∞—Ç–∞
        fig = px.scatter()
        fig.add_scatter(x=df_ei_ed['H/D'], y=df_ei_ed['œÉR'],
                        mode='markers', name='Ei/Ed —Ç–æ—á–∫–∏', marker=dict(color='blue'))
        fig.add_scatter(x=df_esr_ei['H/D'], y=df_esr_ei['œÉR'],
                        mode='markers', name='Esr/Ei —Ç–æ—á–∫–∏', marker=dict(color='green'))
        fig.add_scatter(x=[HD], y=[0], mode='markers', name='–í–∞—à–∞—Ç–∞ —Ç–æ—á–∫–∞', marker=dict(color='red', size=10))
        fig.update_layout(title="–ü–æ–∑–∏—Ü–∏—è –Ω–∞ —Ç–æ—á–∫–∞—Ç–∞ –≤ –Ω–æ–º–æ–≥—Ä–∞–º–∞—Ç–∞",
                          xaxis_title="H/D",
                          yaxis_title="œÉR")
        st.plotly_chart(fig)

        st.success("–ò–Ω—Ç–µ—Ä–ø–æ–ª–∞—Ü–∏—è –Ω–∞ œÉ –º–æ–∂–µ –¥–∞ —Å–µ –¥–æ–±–∞–≤–∏ —Ç—É–∫ —Å–ø–æ—Ä–µ–¥ –¥–∞–Ω–Ω–∏—Ç–µ.")
    else:
        st.warning("–ú–æ–ª—è, –≤—ä–≤–µ–¥–µ—Ç–µ Ei, Ed –∏ D —Å –ø–æ–ª–æ–∂–∏—Ç–µ–ª–Ω–∏ —Å—Ç–æ–π–Ω–æ—Å—Ç–∏.")
else:
    st.warning("–ú–æ–ª—è, –≤—ä–≤–µ–¥–µ—Ç–µ h –∏ E —Å –ø–æ–ª–æ–∂–∏—Ç–µ–ª–Ω–∏ —Å—Ç–æ–π–Ω–æ—Å—Ç–∏ –∑–∞ –≤—Å–∏—á–∫–∏ –ø–ª–∞—Å—Ç–æ–≤–µ.")
